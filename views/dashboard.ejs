<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    *{
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }
    
    html, body {
        height: 100%;
        width: 100%;
    }

    #main{
        height: 100%;
        width: 100%;
        background-color: skyblue;
        display: flex;

    }
    #userSection{
        width: 35%;
        height: 100%;
        /* background-color: rgb(164, 164, 236);     */
        display: flex;
        align-items: start;
        padding-left: 20px;
        padding-top: 30px;
        flex-direction: column;
        gap: 30px;
        border-right: 1px solid black;
    }
    .chatUser{
        display: flex;
        flex-direction: column;
        gap: 30px;
        overflow-y: auto;
        width: 100%;
    }
    .chatUser::-webkit-scrollbar{
            display: none;
        }
    .chatUser h3{
        background-color: gray;
        padding: 10px;
        border-radius: 30px;
        display: flex;
        gap: 30px;
        width: fit-content;
        align-items: center;
        cursor: pointer;
    }
    #chatSection{
        width: 100%;
        height: 100%;
        position: relative;
        background-color: wheat;
        display: none;
    }
    #nav{
        height: 100px;
        display: flex;
        align-items: center;
        /* background-color: black; */
        width: 100%;
        border-bottom: 1px solid black;
        padding-left: 30px;
    }
    
    #nav h3{
        font-size: 40px;
        display: flex;
        align-items: center;
        gap: 30px;

        /* background-color: black; */
    
    }
    #nav h3 img{
        height: 50px;
        width: 50px;
        border-radius: 50%;
        object-fit: cover;
        object-position: center;
        background-color: black;
    }
    form{
        display: flex;
        align-items: center;
        position: absolute;
        bottom: 0%;
        width: 100%;
    }

    #chatSection #in{
        width: 100%;
        padding: 20px;
        border-radius: 20px;
    }
    #submit{
        width: 10%;
        padding: 20px;
        border-radius: 20px;
        background-color: beige;
    }
    #chatContainer{
        /* background-color: wheat; */
        height: calc(100% - 100px);
        width: 100%;

    }
    a{
        font-size: 20px;
        text-decoration: none;
        color: black;
        padding: 20px;
        border-radius: 20px;
        background-color: #807373

        ;

    }
    #userSection h1{
        display: flex;
        align-items: center;
        gap: 30px;
        
    }
    .offline{
        background-color: red;
        height: 10px;
        width: 10px;
        border-radius: 50%;
    }
    .online{
        background-color: green;
        height: 10px;
        width: 10px;
        border-radius: 50%;
    }
    .chat-container {
    /* background-color: rgb(43, 41, 41); */
    
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    max-width: 100%;
    margin: auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    height: calc(100% - 100px);

}

.message-box {
    flex: 1;
    padding: 10px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

.message {
    max-width: 75%;
    padding: 8px 12px;
    border-radius: 20px;
    margin-bottom: 10px;
    word-wrap: break-word;
}

.user {
    background-color: #007bff;
    color: white;
    align-self: flex-end;
    border-top-left-radius: 0;
}

.opponent {
    background-color: #e1e1e1;
    color: black;
    align-self: flex-start;
    border-top-right-radius: 0;
}

#messageInput{
    border: none;
    border-top: 1px solid #ccc;
    padding: 10px;
    resize: none;
    height: 60px;
    width: 100%;
    box-sizing: border-box;
    
}

button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    width: 10%;
}

button:hover {
    background-color: #0056b3;
}

.inputs{
    display: flex;
}


</style>
<body>

    <div id="main">

        <div id="userSection">

            <h1>Hi <%=user.name%>... <a href="/logout/<%=user._id%>"> logout</a></h1>

            <div class="chatUser">

             <% alluser.forEach(function(u){ %>
                 
                <% if(u.isOnline==0){ %>
                <h3 keyId="<%=u._id%>" ><%=u.name%> <div class="offline" id="<%=u._id%>"></div></h3>
                <% } else{ %>
                    <h3 keyId="<%=u._id%>" ><%=u.name%> <div class="online" id="<%=u._id%>"></div></h3>

                <% } %>    
             <%  }) %>


               
            </div>


        </div>

        <div id="chatSection">
            <div id="nav">
                <h3> <img src="" alt=""> Priyansh</h3>
         </div>

         <div class="chat-container">
            <div class="message-box" id="messageBox">
                <div class="message opponent">Hello! How are you?</div>
                <div class="message user">I'm good, thanks! How about you?</div>
                <div class="message opponent">Doing well! What are you up to?</div>
                <div class="message user">Just working on a project.</div>
                <!-- Add more messages here -->
            </div>
           
            <div class="inputs">
                <input type="text" id="messageInput"  placeholder="Enter message..." value="">
                <button id="sendButton">Send</button>
            </div>

         </div>


            
        </div>


    </div>
    
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.7/axios.min.js" integrity="sha512-DdX/YwF5e41Ok+AI81HI8f5/5UsoxCVT9GKYZRIzpLxb8Twz4ZwPPX+jQMwMhNQ9b5+zDEefc+dcvQoPWGNZ3g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
     
     const socket = io();
       var senderUser ='<%= user._id%>'
       var receiverUser = ""
       socket.emit("userId",senderUser)
        
       // getting receiver id...
       document.querySelector('#userSection').addEventListener('click',function (dets) {

        if(dets.target.tagName == 'H3'){     
            receiverUser = dets.target.getAttribute("keyId")
            document.querySelector("#chatSection #nav h3").innerHTML = dets.target.innerHTML
            document.querySelector("#chatSection").style.display = "block"  
            document.querySelector(".message-box").innerHTML="";
            socket.emit("loadChat",{sender_id:senderUser,receiver_id:receiverUser});
            socket.on("previousChat",function(chat){
                
                chat.forEach(function(c){
                
                    if(c.sender_Id === senderUser){
                        document.querySelector(".message-box").innerHTML += `
                           <div class="message user">${c.message}</div>  
                        `
                    }else{
                        document.querySelector(".message-box").innerHTML +=`
                           <div class="message opponent">${c.message}</div>
                        `

                    }
                    
                })
                  
            })
        }

       })

       //chat-save
    
       
       const sendMessage = async (senderId, receiverId, message) => {
        console.log(receiverId);
        
        
        try {
       
            const response = await axios.post('/saveChat', {
            sender_Id: senderId,
            receiver_Id: receiverId,
            message: message
            });
    
           console.log('Message sent successfully:', response.data.data);
           
           socket.emit("userMessage",response.data.data)
           
           var clutter=`
                <div class="message user">${response.data.data.message}</div> 
           `
           document.querySelector(".message-box").innerHTML+=clutter;

         } catch (error) {
        console.error('Error sending message:', error);
        }

    };

     
       document.querySelector("#sendButton").addEventListener("click",function(){
        var inputVal=document.getElementById('messageInput')
        var message = inputVal.value;
        inputVal.value=" "
        console.log(receiverUser);

        
        sendMessage(senderUser, receiverUser, message);
       })

       
      


       socket.on("online",function(data){
          

        
        document.getElementById(data).classList.remove("offline")
        document.getElementById(data).classList.add("online")

        
        
        
       })

       socket.on("offline",function(data){
        document.getElementById(data).classList.remove("online")
        document.getElementById(data).classList.add("offline")
       })
       
       socket.on("oppoMessage",function(data){
        
        console.log(data);
        
        if(data.receiver_Id === senderUser && data.sender_Id === receiverUser){
            var clutter = ` 
                <div class="message opponent">${data.message}</div>
              ` 
             document.querySelector(".message-box").innerHTML+=clutter;
        }else{
            console.log("ni ksjdfhk");
            
        }

       
       }) 

        
    </script>
</body>
</html>